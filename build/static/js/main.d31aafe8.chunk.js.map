{"version":3,"sources":["components/Button.js","components/Table.js","fetchdata.js","index.js"],"names":["CButton","props","categ","handleClick","bind","this","setCateg","Nav","Item","className","Link","onClick","React","Component","DTable","fullHeaders","ths","Object","keys","itemData","map","key","index","push","id","type","name","color","price","manufacturer","stock","Table","striped","hover","size","responsive","variant","undefined","createHeaders","createRows","Fetcher","percentRef","completionPCT","notch","setPercent","fetch_retry","url","n","a","fetch","res","headers","get","length","Error","Promise","resolve","console","log","completedata","categs","Set","mfrs","stockdata","cat","curl","json","i","catdata","add","itemid","toUpperCase","Math","floor","aurl","res2","rdata","response","payload","needle","cut0","search","cut1","substring","forEach","App","getCateg","catName","toLowerCase","setState","getPercent","pct","tgt","completionPT","loadingTG","state","isFetched","isFetchingBg","dataExpiry","fd","setInterval","fetchData","then","resp","itemdata","Navbar","bg","sticky","expand","Brand","href","Toggle","aria-controls","NavbarCollapse","Container","fluid","Jumbotron","ProgressBar","animated","now","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d31aafe8.chunk.js","sourcesContent":["import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\n\r\nclass CButton extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.categ = props.categ;\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(){\r\n        this.props.setCateg(this.categ);\r\n    }\r\n\r\n    render() {\r\n        return (<Nav.Item className='d-flex'><Nav.Link className='' onClick={this.handleClick}>{this.categ}</Nav.Link></Nav.Item>);\r\n    }\r\n}\r\n\r\nexport default CButton;","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n\r\nclass DTable extends React.Component {\r\n\r\n    createHeaders(){\r\n            let fullHeaders = [];\r\n            let ths = Object.keys(this.props.itemData[Object.keys(this.props.itemData)[0]]).map((key, index) => {\r\n                return <th key={index}>{key}</th>\r\n            });\r\n\r\n            fullHeaders.push(<tr key='xyz'>{ths}</tr>);\r\n\r\n            return fullHeaders;\r\n    }\r\n\r\n    createRows(){\r\n            return Object.keys(this.props.itemData).map((id, index) => {\r\n                const { type, name, color, price, manufacturer, stock} = this.props.itemData[id];\r\n                return (<tr key={id}>\r\n                    <td>{id}</td><td>{type}</td><td>{name}</td>\r\n                    <td>{color}</td>\r\n                    <td>{price}</td>\r\n                    <td>{manufacturer}</td><td>{stock}</td>\r\n                </tr>)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return(<Table striped hover size='sm' responsive variant=\"dark\" className='text-center text-capitalize'>\r\n                    \r\n                    <thead>{(this.props.itemData !== undefined) && this.createHeaders()}</thead>\r\n                    <tbody>{(this.props.itemData !== undefined) && this.createRows()}</tbody>\r\n                   \r\n                </Table>);\r\n    }\r\n}\r\n\r\nexport default DTable;","\r\n\r\nclass Fetcher{ \r\n\r\n    constructor(percentRef){\r\n        this.completionPCT = 0;\r\n        this.notch = 0;\r\n        this.setPercent = percentRef;\r\n    }\r\n\r\n\r\n    async fetchData() {\r\n        \r\n        //Testdata \r\n        /*\r\n        const completedata = {'beanies': { '123456' : { \r\n            'id' : '123456',\r\n            'type' : 'beanies',\r\n            'name' : 'superhat',\r\n            'color' : '[\"black\"]',\r\n            'price' : '71',\r\n            'manufacturer' : 'bitchinclothes',\r\n            'stock' : 'IN STOCK'\r\n          }},\r\n            'gloves': { '987654' : {\r\n            'id' : '987654',\r\n            'type' : 'gloves',\r\n            'name' : 'funkyhat',\r\n            'color': 'red',\r\n            'price': '123',\r\n            'manufacturer' : 'okkau',\r\n            'stock' : 'less than 10'\r\n          }}};\r\n        */\r\n        async function fetch_retry(url, n) {\r\n            try {\r\n                let res = await fetch(url);\r\n                if (res.headers.get('x-error-modes-active').length > 1) throw new Error('x-error');\r\n                else return Promise.resolve(res);\r\n                \r\n\r\n            } catch (err) {\r\n                if (n === 1) throw new Error('n is 1');\r\n                console.log('retried url:' + url);\r\n                return await fetch_retry(url, n - 1);\r\n            }\r\n        }\r\n        \r\n        \r\n        let completedata = {};\r\n        let categs = new Set(['gloves','beanies','facemasks']);\r\n\r\n        let mfrs = new Set();\r\n        let stockdata = {};\r\n\r\n        for(let cat of categs) {\r\n            let curl = `https://cors-anywhere.herokuapp.com/https://bad-api-assignment.reaktor.com/v2/products/${cat}`;\r\n            let res = await fetch(curl);\r\n            let catdata = await res.json();\r\n            completedata[cat] = {};\r\n            for(let i in catdata){\r\n                if(catdata[i].manufacturer !== undefined) mfrs.add(catdata[i].manufacturer);\r\n                let itemid = catdata[i]['id'].toUpperCase();\r\n                completedata[cat][itemid] = catdata[i];\r\n\r\n            }\r\n            \r\n        }\r\n\r\n        this.setPercent(20, 'Products');\r\n        this.completionPCT = 20;\r\n        this.notch = Math.floor((80/mfrs.size));\r\n        for(let name of mfrs) {\r\n\r\n            \r\n            this.setPercent(this.completionPCT, name);\r\n\r\n            let aurl = `https://cors-anywhere.herokuapp.com/https://bad-api-assignment.reaktor.com/v2/availability/${name}`;\r\n            let res2 = await fetch_retry(aurl, 5);\r\n            let rdata = await res2.json();\r\n\r\n            \r\n            if( rdata.response.length > 5 ) {\r\n                for(let i = 0; i<rdata.response.length; i++){\r\n                    let payload = rdata.response[i]['DATAPAYLOAD'];\r\n                    let needle = '<INSTOCKVALUE>';\r\n                    let cut0 = payload.search(needle) + needle.length;\r\n                    let cut1 = payload.search('</INSTOCK');\r\n                    stockdata[rdata.response[i]['id']] = payload.substring(cut0,cut1);\r\n                    \r\n                }\r\n            }\r\n            this.completionPCT += this.notch;\r\n        }\r\n\r\n        this.setPercent(this.completionPCT, 'Stockpiles');\r\n        for(let cat of categs){\r\n        //add stock data to relevant ids\r\n            Object.keys(completedata[cat]).forEach(key => {\r\n                completedata[cat][key]['stock'] = stockdata[key];\r\n            });\r\n        }\r\n        \r\n\r\n        console.log(completedata);\r\n        \r\n        return completedata;\r\n    }\r\n}\r\n\r\nexport default Fetcher;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport CButton from './components/Button';\r\nimport DTable from './components/Table';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport fd from './fetchdata';\r\nimport NavbarCollapse from 'react-bootstrap/esm/NavbarCollapse';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isFetched : false,\r\n      isFetchingBg : false,\r\n      dataExpiry : null,\r\n      itemData : null,\r\n      categ : 'gloves',\r\n      fd : new fd(this.getPercent.bind(this)),\r\n      completionPT : 0,\r\n      loadingTG : ''\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    setInterval( () => {\r\n      this.setState({ dataExpiry : this.state.dataExpiry+1});\r\n      console.log(this.state.dataExpiry);\r\n    }, 1000);\r\n\r\n    this.state.fd.fetchData().then(resp => {\r\n        this.setState({\r\n            isFetched : true,\r\n            itemData : resp,\r\n            dataExpiry : 0\r\n        });\r\n    }); \r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.dataExpiry >= 300)  {\r\n        if(this.state.isFetchingBg === false) {\r\n          this.state.fd.fetchData().then( resp => {\r\n           this.setState({\r\n              dataExpiry : 0,\r\n              itemdata : resp,\r\n              isFetchingBg : false\r\n           }); \r\n          });\r\n        \r\n          this.setState({\r\n            isFetchingBg : true\r\n          });\r\n        }\r\n    }\r\n    \r\n  }\r\n\r\n  getCateg = (catName) => {\r\n      let cat = catName.toLowerCase();\r\n      this.setState({ categ : cat});\r\n  }\r\n  \r\n  getPercent = (pct,tgt) => {\r\n    this.setState({ \r\n        completionPT : pct,\r\n        loadingTG : tgt\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const cat = this.state.categ;\r\n    return (\r\n      <div>\r\n      <Navbar variant=\"dark\" bg='dark' sticky='top' expand='sm'>\r\n        <Navbar.Brand href=\"#home\">BadApi Co.</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <NavbarCollapse>\r\n        <Nav className='justify-content-end'>\r\n        <CButton setCateg={this.getCateg.bind(this)} categ='Gloves'/>\r\n        <CButton setCateg={this.getCateg.bind(this)} categ='Beanies'/>\r\n        <CButton setCateg={this.getCateg.bind(this)} categ='Facemasks'/>\r\n        </Nav>\r\n        </NavbarCollapse>\r\n      </Navbar>\r\n      <Container fluid='lg' className=\"px-0\">\r\n \r\n        <div>\r\n          {(this.state.isFetched !== true) &&  \r\n          <Jumbotron>\r\n          <h3 className='text-center'>Loading data: {this.state.loadingTG}</h3>  \r\n          <ProgressBar animated variant='success' now={this.state.completionPT} />\r\n          </Jumbotron>}\r\n          {this.state.isFetched && <DTable itemData={this.state.itemData[cat]}/>}\r\n        </div>\r\n      </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//fd();\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}